# -*- coding: utf-8 -*-
"""chat_bot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RKQEfZuoQQQ0zT7Y4nhR19ssodLjgaNc
"""

import numpy as np
from sklearn.feature_extraction.text import TfidfTransformer
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import CountVectorizer
import ast

questions = []
answers = []
import ast
with open("/content/qa_Electronics.json",'r') as f:
  for line in f:
    data = ast.literal_eval(line) # converting to dictionary
    questions.append(data['question'].lower())
    answers.append(data['answer'].lower())

questions[:5]

answers[:5]

vectorizer = CountVectorizer(stop_words='english')
X_vec = vectorizer.fit_transform(questions)

tfidf = TfidfTransformer()
X_tfidf = tfidf.fit_transform(X_vec)

def conversation(im):
    global tfidf, answers, X_tfidf
    Y_vec = vectorizer.transform(im)
    Y_tfidf = tfidf.fit_transform(Y_vec)
    cos_sim = np.rad2deg(np.arccos(max(cosine_similarity(Y_tfidf, X_tfidf)[0])))
    if cos_sim > 60 :
        return "sorry, I did not quite understand that"
    else:
        return answers[np.argmax(cosine_similarity(Y_tfidf, X_tfidf)[0])]

def main():
    usr = input("Please enter your username: ")
    print("support: Hi " + usr + ", welcome to Q&A support. How can I help you?")
    while True:
        im = input("{}: ".format(usr)) # get the input query
        if im.lower() == 'bye':
            print("Q&A support: bye!")
            break
        else:
            print("Q&A support: "+conversation([im]))

main()

main()

